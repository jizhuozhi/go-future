package future

import (
	"errors"
	"testing"

	"github.com/stretchr/testify/assert"
)

{{range .TestCases }}
func {{.Name}}(t *testing.T) {
    {{- $futures := .Futures}}
    {{- range $futures }}
	var {{.Name}} *Future[{{.Type}}]
	{{- end}}

	var ff *Future[Tuple{{len $futures}}[{{range $i := $futures}}{{if .NotFirst}}, {{end}}{{.Type}}{{end}}]]
	var tp Tuple{{len $futures}}[{{range $i := $futures}}{{if .NotFirst}}, {{end}}{{.Type}}{{end}}]
	var err error
    {{range $i := $futures }}
	{{.Name}} = Done2({{.Val}}, nil)
	{{- end}}
	ff = Of{{len $futures}}({{range $futures}}{{if .NotFirst}}, {{end}}{{.Name}}{{end}})
	tp, err = ff.Get()
	assert.NoError(t, err)
	assert.Equal(t, tp, Tuple{{len $futures}}[{{range $i := $futures}}{{if .NotFirst}}, {{end}}{{.Type}}{{end}}]{ {{range $i := $futures}}{{if .NotFirst}}, {{end}}{{.Val}}{{end}} })
    {{range $i := $futures }}
    {{- range $j := $futures }}
    {{- if not (eq $i $j) }}
	{{.Name}} = Done2({{.Val}}, nil)
	{{- else}}
	{{.Name}} = Done2({{.Val}}, errors.New("{{.Name}}"))
	{{- end}}
	{{- end}}
	ff = Of{{len $futures}}({{range $futures}}{{if .NotFirst}}, {{end}}{{.Name}}{{end}})
	tp, err = ff.Get()
	assert.EqualError(t, err, "{{.Name}}")
	{{end}}
}
{{end}}